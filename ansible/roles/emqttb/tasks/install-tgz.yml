- name: Get latest emqttb release
  when: emqttb_version == 'latest' and emqttb_tgz_download_url == '' and emqttb_tgz_file_path == ''
  uri:
    url: https://api.github.com/repos/emqx/emqttb/releases/latest
    body_format: json
    return_content: yes
  register: emqttb_assets

- name: Download emqttb tgz
  when: emqttb_tgz_download_url != ''
  ansible.builtin.get_url:
    url: emqttb_tgz_download_url
    dest: /tmp/emqttb.tar.gz
    mode: '0644'

- name: Set the match url fact
  when: emqttb_tgz_download_url == '' and emqttb_tgz_file_path == ''
  set_fact:
    file_name_match: "{{ ansible_distribution | lower }}{{ ansible_distribution_version }}-{{ deb_architecture_map[ansible_architecture] }}"

- name: Download emqttb tgz
  when: emqttb_tgz_download_url == '' and emqttb_tgz_file_path == '' and file_name_match in item.browser_download_url
  ansible.builtin.get_url:
    url: "{{ item.browser_download_url }}"
    dest: "/tmp/emqttb.tar.gz"
    mode: '0644'
  loop: "{{ emqttb_assets.json.assets }}"

- name: Upload tgz
  when: emqttb_tgz_file_path != ''
  ansible.builtin.copy:
    src: "{{ emqttb_tgz_file_path }}"
    dest: "/tmp/emqttb.tar.gz"

- name: Create emqttb system user
  become: yes
  ansible.builtin.user:
    name: emqttb
    shell: /bin/bash
    system: yes
    createhome: yes
    home: "{{ emqttb_home_dir }}"

- name: Unarchive emqttb
  become: yes
  become_user: emqttb
  ansible.builtin.unarchive:
    src: "/tmp/emqttb.tar.gz"
    dest: "{{ emqttb_home_dir }}"
    copy: no
      
- name: Render emqttb systemd unit file
  become: yes
  ansible.builtin.template:
    src: emqttb.service.j2
    dest: /etc/systemd/system/emqttb.service
    mode: '0644'

- name: Create /etc/emqttb directory
  become: yes
  ansible.builtin.file:
    path: /etc/emqttb
    state: directory
    mode: '0755'

- name: Render emqttb env file
  become: yes
  ansible.builtin.template:
    src: env.j2
    dest: /etc/emqttb/env
    mode: '0644'

- name: Run daemon-reload
  become: yes
  ansible.builtin.command: systemctl daemon-reload
