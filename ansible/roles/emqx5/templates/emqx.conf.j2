node {
  name = "{{ emqx_node_name }}"
  cookie = "{{ emqx_node_cookie | default('emqxperformancetest') }}"
  role = "{{ emqx_node_role | default('core') }}"
  data_dir = "{{ emqx_data_dir | default('/var/lib/emqx') }}"
  process_limit = {{ emqx_process_limit | default(2097152) }}
  max_ports = {{ emqx_max_ports | default(2097152) }}
}

cluster {
  name = "{{ emqx_cluster_name | default('emqxcl') }}"
  discovery_strategy = "{{ emqx_cluster_discovery_strategy }}"
{% if emqx_cluster_discovery_strategy == "static" %}
  static {
    seeds = {{ emqx_cluster_static_seeds | to_json }}
  }
{% endif -%}
{% if emqx_cluster_discovery_strategy == "dns" -%}
  dns {
    name = "{{ emqx_cluster_dns_name }}"
    record_type = "{{ emqx_cluster_dns_record_type }}"
  }
{% endif -%}
}

listeners {
  ssl {
    default {
      acceptors = 32
    }
  }
  tcp {
    default {
      acceptors = 64
      max_connections = infinity
    }
  }
}

log {
  console_handler {
    level = "{{ emqx_log_console_level | default('notice') }}"
  }
  file_handlers {
    default {
      level = "{{ emqx_log_file_level | default('notice') }}"
    }
  }
}

{% if emqx_prometheus_enabled -%}
prometheus {
  enable = true
  enable_basic_auth = false
  collectors {
    mnesia = disabled
    vm_dist = disabled
    vm_memory = disabled
    vm_msacc = disabled
    vm_statistics = disabled
    vm_system_info = disabled
  }
{% if emqx_prometheus_push_gateway_server | length > 0 -%}
  push_gateway {
    enable = true
    headers {}
    interval = "15s"
    job_name = "${name}/instance/${name}~${host}"
    url = "{{ emqx_prometheus_push_gateway_server }}"
  }
{% endif -%}
}
{% endif -%}

dashboard {
  listeners.http {
    bind = 18083
  }
}

api_key {
  bootstrap_file = "{{ emqx_api_key_bootstrap_file | default('/etc/emqx/bootstrap-api') }}"
}

{% if emqx_license | length > 0 -%}
license {
  key = "{{ emqx_license | trim }}"
}
{% endif -%}

{% if emqx_durable_sessions_enabled -%}
durable_sessions {
  enable = true
{% if emqx_durable_sessions_batch_size is defined %}
  batch_size = {{ emqx_durable_sessions_batch_size }}
{% endif -%}
{% if emqx_durable_sessions_idle_poll_interval is defined %}
  idle_poll_interval = "{{ emqx_durable_sessions_idle_poll_interval }}"
{% endif -%}
{% if emqx_durable_sessions_heartbeat_interval is defined %}
  heartbeat_interval = "{{ emqx_durable_sessions_heartbeat_interval }}"
{% endif -%}
{% if emqx_durable_sessions_renew_streams_interval is defined %}
  renew_streams_interval = "{{ emqx_durable_sessions_renew_streams_interval }}"
{% endif -%}
{% if emqx_durable_sessions_session_gc_interval is defined %}
  session_gc_interval = "{{ emqx_durable_sessions_session_gc_interval }}"
{% endif -%}
{% if emqx_durable_sessions_session_gc_batch_size is defined %}
  session_gc_batch_size = {{ emqx_durable_sessions_session_gc_batch_size }}
{% endif -%}
{% if emqx_durable_sessions_message_retention_period is defined %}
  message_retention_period = "{{ emqx_durable_sessions_message_retention_period }}"
{% endif -%}
{% if emqx_durable_sessions_force_persistence is defined %}
  force_persistence = {{ emqx_durable_sessions_force_persistence }}
{% endif -%}
}
durable_storage {
  messages {
    backend = {{ emqx_durable_storage_backend | default('builtin_raft') }}
{% if emqx_durable_storage_data_dir is defined %}
    data_dir = "{{ emqx_durable_storage_data_dir }}"
{% endif -%}
{% if emqx_durable_storage_n_shards is defined %}
    n_shards = {{ emqx_durable_storage_n_shards }}
{% endif -%}
{% if emqx_durable_storage_n_sites is defined %}
    n_sites = {{ emqx_durable_storage_n_sites }}
{% endif -%}
{% if emqx_durable_storage_replication_factor is defined %}
    replication_factor = {{ emqx_durable_storage_replication_factor }}
{% endif -%}
{% if emqx_durable_storage_layout is defined %}
    layout = {{ emqx_durable_storage_layout }}
{% endif -%}
  }
}
{% endif -%}

force_shutdown {
  enable = false
}

sysmon {
  os {
    cpu_check_interval = 60s
    cpu_high_watermark = 80%
    cpu_low_watermark = 60%
    mem_check_interval = 60s
    procmem_high_watermark = 5%
    sysmem_high_watermark = 80%
  }
  vm {
    busy_dist_port = true
    busy_port = true
    large_heap = 32MB
    long_gc = disabled
    long_schedule = 240ms
    process_check_interval = 30s
    process_high_watermark = 80%
    process_low_watermark = 60%
  }
}

mqtt {
  max_mqueue_len = infinity
}
